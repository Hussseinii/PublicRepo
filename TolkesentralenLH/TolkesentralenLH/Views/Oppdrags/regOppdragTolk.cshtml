@model TolkesentralenLH.ViewModels.Tolking_vm

@{
    ViewBag.Title = "regOppdragTolk";
}

<h2>regOppdragTolk</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Tolking_vm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.kundeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kundeID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kundeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.oppdragID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.oppdragID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.oppdragID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dato, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dato, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dato, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fraspraak, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fraspraak, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fraspraak, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tilspraak, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tilspraak, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tilspraak, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.andreopplysninger, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.andreopplysninger, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.andreopplysninger, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.typetolk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.typetolk, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.typetolk, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sted, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.oppdragsdato, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.oppdragsdato, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.oppdragsdato, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.frakl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.frakl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.frakl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tilkl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tilkl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tilkl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="regOppdragTolk" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
